FRAMEWORK/CRITERIA:
[FRAMEWORK]
<ErrorTypes>
  <MainType name="ADJECTIVE" description="If an error occurs in the use of an adjective in writing, where the adjective fails to properly modify or describe a noun, or is incorrectly formed or placed, assign this tag; otherwise, leave it untagged.">
    <SubType name="General Adjective" description="If an adjective modifies a noun without indicating order, quantity, or membership in a series, and is used incorrectly in terms of agreement, form (like comparative or superlative), or placement, assign this tag; otherwise, leave it untagged. Examples include adjectives describing qualities or states such as 'old', 'beautiful', or 'obvious'. Incorrect use of participle forms like '-ing' or '-ed' when used adjectivally should also be tagged here.">
      <Example>Incorrect: "She looked at the destructed building."</Example>
      <Example>Correct: "She looked at the destroyed building."</Example>
      <Example>Incorrect: "He was feeling very depress."</Example>
      <Example>Correct: "He was feeling very depressed."</Example>
    </SubType>
    <SubType name="Ordinal Adjective" description="If an adjective indicates the numerical order of nouns and is misused by not following sequence, agreement, or form, assign this tag; otherwise, leave it untagged. This subtype includes words like 'first', 'second', 'next', 'last', indicating specific positions within an ordered series. Errors can occur in ordinal adjectives when they are used to denote quantity or when multiple ordinals are redundantly applied to the same noun.">
      <Example>Incorrect: "He finished the race in twoth place."</Example>
      <Example>Correct: "He finished the race in second place."</Example>
      <Example>Incorrect: "She was the firstest to arrive."</Example>
      <Example>Correct: "She was the first to arrive."</Example>
    </SubType>
  </MainType>
</ErrorTypes>


Prompt:
    As an expert in English and Computer Science, interpret the provided XML framework or criteria and analyze the structured user input given as JSON. The JSON will contain a key-value pair with "line_number" as a line number, and "sentence" as the corresponding English input text. The text within the JSON is interconnected.
    Using the classification tags from the provided framework, apply all relevant tags to the JSON. You must accurately tag the sentences, identifying and assigning appropriate SubTypes for the MainType. Additionally, for every tag you apply, provide a detailed justification, explaining why each specific tag was chosen.

    Required actions :
    Tagging: "Using the provided criteria file or framework, begin by understanding the MainType outlined. Then, review the description of MainType and its associated SubTypes. Based on these descriptions, assign the appropriate MainType and SubType to each sentence. Some sentences may require multiple SubType tags, so ensure that all relevant tags are applied accurately. Stick strictly to the given FRAMEWORK and focus exclusively on identifying and tagging major errors. Do not offer any suggestions or corrections, just focus solely on tagging major errors."

    Rules for analysis: 
    "If a sentence does not fit any of the MainType and SubType, or if it contains errors that are not addressed by the established criteriaâ€”such as minor errors that do not significantly disrupt the overall meaning or the minor errors that only effect the clarity or conciseness of the sentence then you must write only "NONE" for both MainType and SubType. The aim is to ensure that only relevant major errors are identified and tagged for analysis."

    Justification: "Provide a detailed justification for each tag, explaining why a specific SubType has been applied. Clarify the reasons for tagging each sentence according to the provided criteria, ensuring that the rationale for selecting the particular SubType must be clear and logical. Justification must be according to the provided SubTypeTag and provide correction of SubTypeTag error as well in justification. Also output Correction of errors as 'Correction:'. If their is "NONE" in both MainType and SubType then you must write only "NONE" in Justification."

    Required output :
    The output must be structure as following CSV. Each opening CSV tag should close with proper closing tag.

csv
	LineNumber,InputText,MainTypeTag,SubTypeTags,Justification
	1,"Some text.","Type","Tags","Justification"
csv